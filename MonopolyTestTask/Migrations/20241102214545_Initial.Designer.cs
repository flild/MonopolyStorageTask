// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonopolyTestTask.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MonopolyTestTask.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20241102214545_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MonopolyTestTask.Models.Box", b =>
                {
                    b.Property<int>("BoxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BoxId"));

                    b.Property<DateOnly?>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<int?>("PalleteId")
                        .HasColumnType("integer");

                    b.Property<float>("Volume")
                        .HasColumnType("real");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.ComplexProperty<Dictionary<string, object>>("Size", "MonopolyTestTask.Models.Box.Size#SizeParam", b1 =>
                        {
                            b1.Property<float>("Depth")
                                .HasColumnType("real")
                                .HasColumnName("Depth");

                            b1.Property<float>("Height")
                                .HasColumnType("real")
                                .HasColumnName("Height");

                            b1.Property<float>("Width")
                                .HasColumnType("real")
                                .HasColumnName("Width");
                        });

                    b.HasKey("BoxId");

                    b.HasIndex("PalleteId");

                    b.ToTable("Boxes");
                });

            modelBuilder.Entity("MonopolyTestTask.Models.Pallete", b =>
                {
                    b.Property<int>("PalleteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PalleteId"));

                    b.Property<float>("Volume")
                        .HasColumnType("real");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.ComplexProperty<Dictionary<string, object>>("Size", "MonopolyTestTask.Models.Pallete.Size#SizeParam", b1 =>
                        {
                            b1.Property<float>("Depth")
                                .HasColumnType("real")
                                .HasColumnName("Depth");

                            b1.Property<float>("Height")
                                .HasColumnType("real")
                                .HasColumnName("Height");

                            b1.Property<float>("Width")
                                .HasColumnType("real")
                                .HasColumnName("Width");
                        });

                    b.HasKey("PalleteId");

                    b.ToTable("Palletes");
                });

            modelBuilder.Entity("MonopolyTestTask.Models.Box", b =>
                {
                    b.HasOne("MonopolyTestTask.Models.Pallete", null)
                        .WithMany("Boxes")
                        .HasForeignKey("PalleteId");
                });

            modelBuilder.Entity("MonopolyTestTask.Models.Pallete", b =>
                {
                    b.Navigation("Boxes");
                });
#pragma warning restore 612, 618
        }
    }
}
